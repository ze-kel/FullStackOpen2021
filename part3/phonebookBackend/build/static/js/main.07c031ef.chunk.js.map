{"version":3,"sources":["bookServer.js","App.js","index.js"],"names":["baseurl","axisos","get","then","response","data","person","post","id","delete","status","put","PhoneListEntry","handleDelete","name","number","onClick","RenderPhoneList","persons","map","PersonForm","handleName","handleNumber","Submit","value","onChange","type","FilterForm","call","Notification","message","className","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","filterVal","setFilter","errorMessage","setErrorMessage","personsToshow","length","filter","toLowerCase","includes","useEffect","bookServer","sendMessage","setTimeout","event","target","preventDefault","newPerson","existingPerson","window","confirm","catch","error","console","log","concat","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07c031ef.chunk.js","sourcesContent":["import axisos from \"axios\"\n\nconst baseurl = \"/api/persons\"\n\nconst getAll = () => {\n    const request = axisos.get(baseurl)\n    return request.then(response => response.data)\n}\n\nconst addNew = person => {\n    const request = axisos.post(baseurl, person)\n    return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    const request = axisos.delete(baseurl + \"/\" + id)\n    return request.then(response => response.status)\n}\n\nconst updateExisting = (id, person) => {\n    const request = axisos.put(baseurl + \"/\" + id, person)\n    return request.then(response => response.data)\n}\n\nexport default {getAll, addNew, remove , updateExisting}","import React, { useState, useEffect } from 'react'\nimport bookServer from './bookServer'\n\n\n\n\nconst PhoneListEntry = ({ person, handleDelete }) => {\n\n  return (\n    <p>{person.name} | {person.number} <button onClick={() => handleDelete(person.id, person.name)}>Delete</button> </p> \n  )\n}\n\nconst RenderPhoneList = ({ persons,handleDelete }) => {\n  return (\n    <div>\n      {persons.map(person => <PhoneListEntry key={person.id} person={person} handleDelete={handleDelete}/>)}\n    </div>)\n}\n\nconst PersonForm = ({ name, number, handleName, handleNumber, Submit }) => {\n  return (<form>\n    <div>\n      name: <input value={name} onChange={handleName} />\n    </div>\n    <div>\n      number: <input value={number} onChange={handleNumber} />\n    </div>\n    <div>\n      <button type=\"submit\" onClick={Submit}>add</button>\n    </div>\n  </form>)\n}\n\nconst FilterForm = ({value, call}) => <input value={value} onChange={call} />\n\nconst Notification = ({message}) =>{\n    if(message){\n      return <p className=\"message\">{message}</p>\n    }else{\n      return null\n    }\n}\n\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filterVal, setFilter] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n\n  let personsToshow = filterVal.length === 0 ? persons : persons.filter(person => person.name.toLowerCase().includes(filterVal.toLowerCase()))\n\n\n  useEffect(() => {\n      bookServer\n      .getAll()\n      .then(response => {\n        setPersons(response)\n      })\n  }, [])\n\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n  const handleDelete = (id, name) =>{\n    if(window.confirm(`Delete ${name}?`)){\n      bookServer\n      .remove(id)\n      .then(() =>{\n        setPersons(persons.filter( (person) => person.id != id ) )\n      })\n    }\n  }\n\n  const sendMessage = (message) =>{\n    setErrorMessage(message);\n    setTimeout(() => {\n      setErrorMessage(\"\");\n    }, 4000);\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    if (newName.length === 0 || newNumber.length === 0) {\n      alert(\"Can't have empty fields\")\n      return\n    }\n    const newPerson = { name: newName, number: newNumber }\n\n    let existingPerson = persons.filter(person => person.name === newPerson.name)[0]\n\n    if (existingPerson) {\n      if(!window.confirm(`${newPerson.name} exists. Update?`)){return}\n      bookServer\n      .updateExisting(existingPerson.id, newPerson)\n      .then(response => {\n        setPersons(persons.map((person) => person.id !== existingPerson.id ? person : response))\n        sendMessage(`Changed ${newPerson.name}`)\n      })\n      .catch(error =>{\n        console.log(error.response.data)\n        sendMessage(error.response.data.error)\n        return\n      })\n\n    }else{\n      bookServer\n      .addNew(newPerson)\n      .then(response => {\n        setPersons(persons.concat(response))\n        sendMessage(`Added ${newPerson.name}`)\n      })\n      .catch(error =>{\n        console.log(error.response.data)\n        sendMessage(error.response.data.error)\n        return\n      })\n    }\n\n\n    setNewName(\"\")\n    setNewNumber(\"\")\n  }\n\n\n  return (\n    <div>\n      <Notification message={errorMessage}/>\n      <h2>Phonebook</h2>\n      <FilterForm value={filterVal} call={handleFilterChange} />\n      <h2>Add new</h2>\n      <PersonForm name={newName} number={newNumber} handleName={handleNameChange} handleNumber={handleNumberChange} Submit={addPerson} />\n      <h2>Numbers</h2>\n      <RenderPhoneList persons={personsToshow} handleDelete={handleDelete}  />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}